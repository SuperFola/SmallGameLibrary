# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
  
    - name: SFML install
      run: |
        wget -O sfml.tar.gz https://www.sfml-dev.org/files/SFML-2.5.1-linux-gcc-64-bit.tar.gz
        mkdir -p sfml
        tar -xzf sfml.tar.gz -C sfml
        path_sfml=`pwd`
        path_sfml+='/'
        path_sfml+=`ls sfml`
        path_sfml+='/sfml/lib/cmake/SFML'
        echo $path_sfml
        ls $path_sfml

    - name: Build CMake
      uses: ashutoshvarma/action-cmake-build@v1
      with:
        # Build directory where build files will be generated
        build-dir: ${{ runner.workspace }}/build # default is ${{ runner.workspace }}/build
        # CMake build type (Release, Debug, MinSizeRel, RelWithDebInfo)
        build-type: Debug # default is Release
        # C Compiler for toolchain
        #cc: # optional
        # C++ Compiler for toolchain
        #cxx: # optional
        # CMake build target
        #target: # optional
        # Number of concurrent jobs for build and test
        #parallel: # optional, default is 4
        # Run CTest or not
        #run-test: # optional, default is false
        # Run 'cmake --install' or not
        #install-build: # optional, default is false
        # Update git submodules
        submodule-update: true
        # Misc Options to pass to CMake while configuring project
        configure-options: -DSFML_ROOT=$path_sfml
        # Misc Options to pass to CMake while building project using cmake --build
        #build-options: # optional
        # Misc Options to pass to CMake while installing project using cmake --install
        #install-options: # optional
        # Misc Options to pass to CTest
        #ctest-options: # optional
